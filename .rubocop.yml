# This configuration only includes the cops that differ from the Rubocop
# defaults, which can be found here:
# https://github.com/bbatsov/rubocop/blob/master/config/default.yml
# https://github.com/bbatsov/rubocop/blob/master/config/enabled.yml
# https://github.com/bbatsov/rubocop/blob/master/config/disabled.yml

AllCops:
  Exclude:
    - 'bin/**/*'
    - 'node_modules/**/*'
    - 'tmp/**/*'
    - 'vendor/**/*'
  TargetRubyVersion: 2.6
  UseCache: true

Metrics/AbcSize:
  Description: A calculated magnitude based on number of assignments, branches, and
    conditions.
  Enabled: false
  Max: 15
  Exclude:
  - spec/**/*

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/BlockLength:
  CountComments: false  # count full line comments?
  Enabled: true
  Max: 25
  ExcludedMethods:
    - 'Struct.new'
  Exclude:
    - 'Rakefile'
    - '**/*.rake'
    - 'spec/**/*.rb'
    - 'source/**/*_spec.rb'

Metrics/ClassLength:
  Description: Avoid classes longer than 100 lines of code.
  Enabled: false
  CountComments: false
  Max: 100

Layout/LineLength:
  Description: Limit lines to 100 characters.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#80-character-limits
  Enabled: true
  Max: 100
  AllowURI: true
  URISchemes:
  - http
  - https

Metrics/MethodLength:
  Description: Avoid methods longer than 15 lines of code.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#short-methods
  Enabled: false
  CountComments: false
  Max: 15
  Exclude:
  - 'db/migrate/*'
  - spec/**/*

Metrics/ModuleLength:
  CountComments: false
  Max: 200
  Description: Avoid modules longer than 200 lines of code.
  Enabled: true
  Exclude:
  - spec/**/*

Metrics/ParameterLists:
  CountKeywordArgs: false

Layout/ParameterAlignment:
  # Alignment of parameters in multi-line method calls.
  #
  # The `with_first_parameter` style aligns the following lines along the same
  # column as the first parameter.
  #
  #     method_call(a,
  #                 b)
  #
  # The `with_fixed_indentation` style aligns the following lines with one
  # level of indentation relative to the start of the line with the method call.
  #
  #     method_call(a,
  #       b)
  Description: >-
                 Align the parameters of a method call if they span more
                 than one line.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-double-indent'
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Style/AndOr:
  Description: Use &&/|| instead of and/or.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-and-or-or
  EnforcedStyle: conditionals
  SupportedStyles:
  - always
  - conditionals

Style/Documentation:
  Description: Document classes and non-namespace modules.
  Enabled: false
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Layout/DotPosition:
  Description: Checks the position of the dot in multi-line method calls.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#consistent-multi-line-chains
  EnforcedStyle: trailing
  SupportedStyles:
  - leading
  - trailing

Style/DoubleNegation:
  Enabled: false

# Warn on empty else statements
# empty - warn only on empty else
# nil - warn on else with nil in it
# both - warn on empty else and else with nil in it
Style/EmptyElse:
  EnforcedStyle: both
  SupportedStyles:
    - empty
    - nil
    - both

Layout/ExtraSpacing:
  # When true, allows most uses of extra spacing if the intent is to align
  # things with the previous or next line, not counting empty lines or comment
  # lines.
  AllowForAlignment: true
  # When true, forces the alignment of = in assignments on consecutive lines.
  ForceEqualSignAlignment: false

Style/FrozenStringLiteralComment:
  Description: >-
                 Add the frozen_string_literal comment to the top of files
                 to help transition from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false

# Checks the indentation of the first element in an array literal.
Layout/FirstArrayElementIndentation:
  # The value `special_inside_parentheses` means that array literals with
  # brackets that have their opening bracket on the same line as a surrounding
  # opening round parenthesis, shall have their first element indented relative
  # to the first position inside the parenthesis.
  #
  # The value `consistent` means that the indentation of the first element shall
  # always be relative to the first position of the line where the opening
  # bracket is.
  #
  # The value `align_brackets` means that the indentation of the first element
  # shall always be relative to the position of the opening bracket.
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
    - special_inside_parentheses
    - consistent
    - align_brackets
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Layout/MultilineOperationIndentation:
  EnforcedStyle: aligned
  SupportedStyles:
    - aligned
    - indented
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Style/PercentLiteralDelimiters:
  # Specify the default preferred delimiter for all types with the 'default' key
  # Override individual delimiters (even with default specified) by specifying
  # an individual key
  PreferredDelimiters:
    default: ()
    '%i': '[]'
    '%I': '[]'
    '%r': '{}'
    '%w': '[]'
    '%W': '[]'

Style/StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#consistent-string-literals
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes
  ConsistentQuotesInMultiline: true

Style/RegexpLiteral:
  Enabled: false

Style/TrailingCommaInArguments:
  # If `comma`, the cop requires a comma after the last argument, but only for
  # parenthesized method calls where each argument is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last argument,
  # for all parenthesized method calls with arguments.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma

Style/TrailingCommaInArrayLiteral:
  # If `comma`, the cop requires a comma after the last item in an array or
  # hash, but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty array and hash literals.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma

Style/TrailingCommaInHashLiteral:
  # If `comma`, the cop requires a comma after the last item in an array or
  # hash, but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty array and hash literals.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma

Naming/MethodParameterName:
  MinNameLength: 2

Style/ExpandPathArguments:
  Enabled: false

Style/FormatStringToken:
  Enabled: false

Style/SingleLineBlockParams:
  Enabled: false

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

Naming/RescuedExceptionsVariableName:
  Enabled: false

Style/HashEachMethods:
  Enabled: false

Style/HashTransformKeys:
  Enabled: false

Style/HashTransformValues:
  Enabled: false

Lint/SuppressedException:
  Enabled: false

Lint/SendWithMixinArgument:
  Enabled: false

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: false

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/MixedRegexpCaptureTypes:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: false

Style/ExponentialNotation:
  Enabled: false

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: false

Style/SlicingWithRange:
  Enabled: false

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: true

Lint/DuplicateElsifCondition:
  Enabled: true

Lint/DuplicateRescueException:
    Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/MissingSuper:
  Enabled: false

Lint/OutOfRangeRegexpRef:
  Enabled: true

Lint/RedundantRequireStatement:
  Enabled: true

Lint/RedundantSplatExpansion:
  Enabled: true

Lint/SafeNavigationWithEmpty:
  Enabled: true

Lint/SelfAssignment:
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Enabled: true

Style/GlobalStdStream:
  Enabled: false

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Lint/EmptyConditionalBody:
  Enabled: false

Lint/UnreachableLoop:
  Enabled: false

Style/AccessorGrouping:
  Enabled: false

Style/ArrayCoercion:
  Enabled: false

Style/BisectedAttrAccessor:
  Enabled: false

Style/CaseLikeIf:
  Enabled: false

Style/ExplicitBlockArgument:
  Enabled: false

Style/HashAsLastArrayItem:
  Enabled: false

Style/HashLikeCase:
  Enabled: false

Style/OptionalBooleanParameter:
  Enabled: false

Style/SingleArgumentDig:
  Enabled: false

Style/StringConcatenation:
  Enabled: false

Style/MultilineWhenThen:
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Enabled: true

Lint/EmptyFile:
  Enabled: false

Lint/UselessMethodDefinition:
  Enabled: false

Style/CombinableLoops:
  Enabled: false

Style/RedundantSelfAssignment:
  Enabled: false

Style/SoleNestedConditional:
  Enabled: false

Lint/UselessTimes:
  Enabled: true

Layout/BeginEndAlignment:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: false

Lint/IdentityComparison:
  Enabled: true

Bundler/DuplicatedGem:
  Enabled: true

Naming/BinaryOperatorParameterName:
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true

Lint/EmptyBlock: # (new in 1.1)
  Enabled: true

Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true

Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true

Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true

Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true

Style/SwapValues: # (new in 1.1)
  Enabled: true

Naming/FileName:
  # We name our gem with dashes which makes Rubocop mad
  Enabled: false

Style/NegatedIf:
  # Differs from IDP
  Enabled: false

Style/IfUnlessModifier:
  # Differs from IDP
  Enabled: false

Style/GlobalVars:
  Enabled: true
  Exclude:
    - '**/spec/**'
