AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  gitsha:
    Type: String
    Description: Git sha
  environment:
    Type: String
    Description: Deployment environment
    Default: "dev"

Metadata:
  AWS::ServerlessRepo::Application:
    Name: login-idp-functions
    Description: login.gov idp functions
    Author: logindotgov
    SpdxLicenseId: CC0-1.0
    HomePageUrl: https://github.com/18f/identity-idp-functions
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/18f/identity-idp-functions
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Application Settings
        Parameters:
          - gitsha
          - environment

Description: >
  identity-idp-functions

  IDP functions for login.gov

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Runtime: ruby2.7
    Tracing: Active
    Environment:
      Variables:
        http_proxy: !Sub
          - '{{resolve:ssm:/${Environment}/network/outboundproxy/url:1}}'
          - Environment: !Ref environment
        https_proxy: !Sub
          - '{{resolve:ssm:/${Environment}/network/outboundproxy/url:1}}'
          - Environment: !Ref environment
        no_proxy: !Sub
          - '{{resolve:ssm:/${Environment}/network/outboundproxy/no_proxy:1}}'
          - Environment: !Ref environment
        ENVIRONMENT_NAME: !Ref environment
    Tags:
      environment: !Ref environment

Resources:
  # add all functions that need gitsha alias to this list
  ApplicationLambdaArns:
    Type: AWS::SSM::Parameter
    Properties:
      Type: StringList
      Name: !Sub
        - /${Environment}/idp/lambda/application-functions
        - Environment: !Ref environment
      Value: !Join
        - ','
        -
          <%- functions.each do |function| -%>
          - !GetAtt <%= function.camelize %>Function.Arn
          <%- end -%>

  ApplicationLambdaGitSha:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub
        - /${Environment}/idp/lambda/gitsha
        - Environment: !Ref environment
      Value: !Ref gitsha

<% functions.each do |function| %>
  <%= function.camelize %>Function:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub
        - ${Environment}-idp-functions-<%= function.camelize %>Function
        - Environment: !Ref environment
      CodeUri: <%= function.underscore %>/lib/
      Handler: <%= function.underscore %>.IdentityIdpFunctions::<%= function.camelize %>.handle
      MemorySize: 128
      AutoPublishAlias: !Ref environment
      DeploymentPreference:
        Type: AllAtOnce
      VersionDescription: !Ref gitsha
      Layers:
        - !Ref DocAuthLayer
        - "arn:aws:lambda:us-west-2:580247275435:layer:LambdaInsightsExtension:14"
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub
            - login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}
            - Environment: !Ref environment
              AccountId: !Ref AWS::AccountId
              Region: !Ref AWS::Region
          KMS_KEY_ALIAS: !Sub
            - ${Environment}-idp-doc-capture
            - Environment: !Ref environment
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - Statement:
          - Sid: S3ObjectAccess
            Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            Resource: !Sub
              - arn:aws:s3:::login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}/*
              - Environment: !Ref environment
                AccountId: !Ref AWS::AccountId
                Region: !Ref AWS::Region
        - Statement:
          - Sid: S3BucketAccess
            Effect: Allow
            Action:
            - s3:ListBucket
            Resource: !Sub
              - arn:aws:s3:::login-gov-idp-doc-capture-${Environment}.${AccountId}-${Region}
              - Environment: !Ref environment
                AccountId: !Ref AWS::AccountId
                Region: !Ref AWS::Region
        - Statement:
          - Sid: KMS
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Encrypt
              - kms:DescribeKey
              - kms:Decrypt
            Resource: !Sub
              - '{{resolve:ssm:/${Environment}/idp/doc-capture/kms/arn:1}}'
              - Environment: !Ref environment
        - Statement:
          - Sid: SSMGet
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource: !Join
              - ''
              - - 'arn:'
                - !Ref AWS::Partition
                - ':ssm:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':parameter/'
                - !Ref environment
                - '*'
          - Sid: SSM
            Effect: Allow
            Action:
              - ssm:DescribeParameters
            Resource:
              - "*"
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt DocAuthSecurityGroup.GroupId
        SubnetIds:
          - !Sub
              - '{{resolve:ssm:/${Environment}/network/subnet/private1/id:1}}'
              - Environment: !Ref environment
          -  !Sub
              - '{{resolve:ssm:/${Environment}/network/subnet/private2/id:1}}'
              - Environment: !Ref environment
          - !Sub
              - '{{resolve:ssm:/${Environment}/network/subnet/private3/id:1}}'
              - Environment: !Ref environment
      Tags:
        environment: !Ref environment

  <%= function.camelize %>FunctionArn:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub
        - /${Environment}/idp/lambda/<%= function.camelize %>/arn
        - Environment: !Ref environment
      Value: !GetAtt <%= function.camelize %>Function.Arn

  <%= function.camelize %>Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub
          - arn:aws:sns:${Region}:${AccountId}:slack-otherevents
          - Region: !Ref AWS::Region
            AccountId: !Ref AWS::AccountId
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions: 
        - Name: FunctionName
          Value: !Ref <%= function.camelize %>Function
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 1
<% end %>

  DocAuthSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Sub
        - '{{resolve:ssm:/${Environment}/network/vpc/id:1}}'
        - Environment: !Ref environment
      GroupDescription: Idp Doc Auth Security Group
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3128
          ToPort: 3128
          CidrIp: 172.16.32.0/22
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.16.32.0/22

  DocAuthLayer:
    Type: "AWS::Serverless::LayerVersion"
    Properties:
      LayerName: !Sub
        - ${Environment}-idp-doc-auth
        - Environment: !Ref environment
      Description: Doc Auth Layer
      ContentUri: doc_auth_layer
      CompatibleRuntimes:
        - ruby2.7
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: ruby2.7

Outputs:<% functions.each do |function| %>
  <%= function.camelize %>Function:
    Description: "<%= function.titleize %> Lambda Function ARN"
    Value: !GetAtt <%= function.camelize %>Function.Arn
  <%= function.camelize %>FunctionIamRole:
    Description: "<%= function.titleize %> Role created for <%= function.titleize %> function"
    Value: !GetAtt <%= function.camelize %>FunctionRole.Arn
<% end -%>
